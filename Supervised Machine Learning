%Project part of the "Applied Machine Learning in Python" course (Module 2) from University of Michigan and Coursera. 

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split


np.random.seed(0)
n = 15
x = np.linspace(0,10,n) + np.random.randn(n)/5
y = np.sin(x)+x/6 + np.random.randn(n)/10


X_train, X_test, y_train, y_test = train_test_split(x, y, random_state=0)

% Q: Create a function that fits a polynomial LinearRegression model on the training data X_train for degrees 1, 3, 6, and 9. 
% (Use PolynomialFeatures in sklearn.preprocessing to create the polynomial features and then fit a linear regression model) 
% For each model, find 100 predicted values over the interval x = 0 to 10 (e.g. np.linspace(0,10,100)) and store this in a numpy array. 
% The first row of this array should correspond to the output from the model trained on degree 1, the second row degree 3, the third row degree 6, 
% and the fourth row degree 9.

